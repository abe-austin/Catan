<project name="Catan Game" default="server" basedir=".">

   <!-- PROPERTIES -->
   <!-- ********** -->	

   <!-- Directory paths for the java server, javascript, and dest dir for the student copy -->
   <property name="port.arg" value="8081"/>
   <property name="web.arg" value="gameplay"/>
   <property name="requests.arg" value="ug"/>
   <property name="host.arg" value="localhost"/>
    
   <!-- Input folders -->
   <property name="java.dir" value="java"/>
   <property name="java.src.dir" value="${java.dir}/src"/>
   <property name="java.lib.dir" value="${java.dir}/lib"/>
   <property name="java.test.dir" value="${java.dir}/test"/>
   
   <!-- Output folders -->
   <property name="java.images" location="${java.dir}/images"/>
   <property name="java.build" location="${java.dir}/build"/>
   <property name="java.dist" location="${java.dir}/dist"/>
   <property name="gson.file" location="gson-2.2.4.jar"/>
   <property name="outputresults" location="output" />
   
   <!-- Base output folder -->
   <property name="dest.dir" value="docs"/>
   <!-- Javadoc output folder -->
   <property name="javadoc.dir" value="${dest.dir}/java"/>
   <!-- Jar file path/name from here -->
   <property name="jar.file" value="server.jar"/>
   

   <!-- CLASSPATHS -->
   <!-- ********** -->

   <path id="java.lib.classpath">
       <fileset dir="${java.lib.dir}">
           <include name="**/*.jar" />
       </fileset>
   </path>

   <path id="all-classpath">
       <path refid="java.lib.classpath"/>
       <pathelement location="${java.build}"/>
   </path>

   <!-- TARGETS -->
   <!-- ******* -->

   <target name="server" description="Runs the demo server">
       <java jar="${jar.file}" fork="true">
           <arg value="${port.arg}"/>
           <arg value="${web.arg}"/>
           <arg value="${requests.arg}"/>
           <assertions>
               <enable/>
           </assertions>
       </java>
   </target>

   <target name="make-java-doc" description="Generate the Java docs">
       <echo> Making Java documentation </echo>
       <delete dir="${javadoc.dir}"/>
       <javadoc destdir="${javadoc.dir}" Package="true">
           <classpath refid="all-classpath" />
           <packageset dir="${java.src.dir}">
               <include name="client/**"/>
               <include name="shared/**"/>
           </packageset>
       </javadoc>
   </target>



   <target name="init" description="create build directories">
       <tstamp/>
       <mkdir dir="${java.build}"/>
       <mkdir dir="${java.dist}"/>
       <mkdir dir="${outputresults}" />
   </target>

   <target name="clean" description="clean build files" >
       <delete dir="${java.build}"/>
       <delete dir="${java.dist}"/>
   </target>

   <target name="compile" depends="init" description="compile the source " >
       <javac srcdir="${java.src.dir}" destdir="${java.build}" debug="true" includeantruntime="true">
           <classpath refid="java.lib.classpath" />
       </javac>
   </target>

   <target name="package" depends="compile" description="package the jar file" >
           <mkdir dir="${java.dist}/lib"/>
           <copy todir="${java.dist}/lib">
                   <fileset dir="${java.lib.dir}">
                           <include name="**"/>
                   </fileset>
           </copy>
           <mkdir dir="${java.dist}/images"/>
           <copy todir="${java.dist}/images">
                   <fileset dir="${java.images}">
                           <include name="**"/>
                   </fileset>
           </copy>
           <jar jarfile="${java.dist}/catan-client.jar" basedir="${java.build}">
                   <manifest>
                           <attribute name="Main-Class" value="client.main.Catan"/>
                           <attribute name="Class-Path" 
                                   value="lib/java-json.jar" />
                   </manifest>
           </jar>
           <jar jarfile="${java.dist}/catan-server.jar" basedir="${java.build}">
                   <manifest>
                           <attribute name="Main-Class" value="server.main.CatanServer"/>
                           <attribute name="Class-Path" 
                                   value="lib/java-json.jar" />
                   </manifest>
           </jar>
   </target>

   <target name="client" depends="package" description="compiles, packages, and runs the student client">
           <java jar="${java.dist}/catan-client.jar" dir="${java.dist}" fork="yes">
                   <sysproperty key="com.sun.management.jmxremote" value=""/>
                   <assertions>
                           <enable/>
                   </assertions>
                   <arg value="${host.arg}"/>
                   <arg value="${port.arg}"/>
           </java>
   </target>

   <target name="our-server" depends="package" description="compiles, packages, and runs the student server">
           <java jar="${java.dist}/catan-server.jar" dir="${java.dist}" fork="yes">
                   <sysproperty key="com.sun.management.jmxremote" value=""/>
                   <assertions>
                           <enable/>
                   </assertions>
           </java>
   </target>
   
   <target name="make-tester-zip" depends="package" description="makes a zip file for your testing team">
       <zip destfile="./tester.zip" basedir="${java.dist}" />
   </target>
   
   <target name="compileTest" depends="compile" description="compile JUnit Test cases ">
       <javac srcdir="${java.test.dir}" destdir="${java.build}" debug="true" includeantruntime="true">
           <classpath refid="java.lib.classpath" />
       </javac>
   </target>

   <target name="test" depends="compileTest" description="Runs all the junit tests">
       <junit printsummary="yes"  errorproperty="JUnit.error" failureproperty="JUnit.error">
           <classpath refid="all-classpath" />
           <formatter type="xml" />
           <assertions>
               <enable/>
           </assertions>

           <batchtest todir="${outputresults}">
               <fileset dir="${java.test.dir}">
                   <include name="**/*Test*" />
                   <exclude name="**/TestHelper*"/>
               </fileset>
           </batchtest>
       </junit>
   </target>

 
</project>

